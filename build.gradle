plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'net.minecrell.licenser' version '0.1.5'
}

allprojects {
    group = 'net.minecrell'
    description = 'An extremely customizable server status ping plugin for Minecraft'
    version = '4.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
        maven {
            name = 'minecrell'
            url = 'http://repo.minecrell.net/releases'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.deprecation = true
    }

    apply plugin: 'net.minecrell.licenser'

    license {
        header = rootProject.file('HEADER')
        include '**/*.java'
    }
}

dependencies {
    compile 'com.google.guava:guava:17.0'
    compile 'com.google.code.gson:gson:2.2.4'
}

processResources {
    from file('LICENSE')
}

subprojects {
    archivesBaseName = "$rootProject.name$archivesBaseName"

    apply plugin: 'com.github.johnrengelman.shadow'

    dependencies {
        compile rootProject
    }

    shadowJar {
        baseName = rootProject.name
        classifier = project.name

        dependencies {
            include project(rootProject.path)
        }
    }

    artifacts {
        archives shadowJar
    }
}

// Wait for evaluation of subprojects
subprojects.each {
    rootProject.evaluationDependsOn it.path
}

apply plugin: 'maven-publish'

task universal(type: Jar) {
    classifier = 'Universal'
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource

    subprojects {
        from sourceSets.main.allSource
    }
}

artifacts {
    archives universal
    archives sourceJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact universal
            artifact sourceJar

            subprojects {
                tasks.withType(tasks.shadowJar.class) {
                    artifact it
                }
            }

            repositories {
                maven {
                    url = System.getenv('REPO_' + (version.endsWith('-SNAPSHOT') ? 'SNAPSHOTS' : 'RELEASES')) ?: "$buildDir/repo"
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}
